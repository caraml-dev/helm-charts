{{- if .Values.rules.enabled }}
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: {{ template "merlin.fullname" . }}-project-sub-resources
  namespace: {{ .Release.Namespace }}
spec:
  match:
    url: <{{ .Values.rules.apiPrefixRegex }}>/projects/<[0-9]+><(/.+)?>
    methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "PATCH"
  authenticators:
    - handler: jwt
  authorizer:
    handler: remote_json
    config:
      payload: |
        {
          "namespace": "Permission",
          "object": {{`"mlp.projects.{{ printIndex .MatchContext.RegexpCaptureGroups 1 }}.{{ (print .MatchContext.Method) | lower }}"`}},
          "relation": "granted",
            "subject_set": {
                "namespace": "Subject",
                "object": {{`"{{ print .Extra.email }}"`}}
            }
        }
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: {{ template "merlin.fullname" . }}-standard-transformer-simulate
  namespace: {{ .Release.Namespace }}
spec:
  match:
    url: <{{ .Values.rules.apiPrefixRegex }}>/standard-transformer/simulate
    methods:
      - "GET"
  authenticators:
    - handler: jwt
  authorizer:
    handler: allow
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: {{ template "merlin.fullname" . }}-models
  namespace: {{ .Release.Namespace }}
spec:
  match:
    url: <{{ .Values.rules.apiPrefixRegex }}>/models<(/.+)?>
    methods:
      - "GET"
      - "POST"
      - "PATCH"
      - "PUT"
      - "DELETE"
  authenticators:
    - handler: jwt
  authorizer:
    handler: allow
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: {{ template "merlin.fullname" . }}-team-alerts
  namespace: {{ .Release.Namespace }}
spec:
  match:
    url: <{{ .Values.rules.apiPrefixRegex }}>/alerts/teams
    methods:
      - "GET"
  authenticators:
    - handler: jwt
  authorizer:
    handler: allow
{{- end -}}