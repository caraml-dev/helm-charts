suite: Unit tests for merlin Deployment
templates:
  - merlin-deployment.yaml
release:
  name: my-release
  namespace: my-namespace
  revision: 1
  isUpgrade: true
tests:
  - it: should set database secret key and name from values if chart specific db is enabled
    set:
      global: {}
      merlin-postgresql:
        enabled: true
        postgresqlDatabase: merlin
        postgresqlUsername: merlin
      merlinExternalPostgresql:
        enabled: false
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal: # check database secret name
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: my-release-merlin-postgresql
      - equal: # check database secret key
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: postgresql-password

  - it: should set database secret key and name from values if chart specific db is disabled, external db is enabled, createSecret is set
    set:
      global: {}
      merlin-postgresql:
        enabled: false
      merlinExternalPostgresql:
        enabled: true
        address: merlin-ext-db-address
        username: merlin-ext
        database: merlin-ext
        password: merlin-ext-password
        createSecret: true
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal: # check database secret name
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: my-release-merlin-external-postgresql
      - equal: # check database secret key
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: postgresql-password

  - it: should set database secret key and name from values if chart specific db is disabled, external db is enabled, secret name & key are set
    set:
      global: {}
      merlin-postgresql:
        enabled: false
      merlinExternalPostgresql:
        enabled: true
        address: merlin-ext-db-address
        username: merlin-ext
        database: merlin-ext
        password: merlin-ext-password
        secretName: secret-name
        secretKey: secret-key
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal: # check database secret name
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: secret-name
      - equal: # check database secret key
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: secret-key

  - it: should set database secret key and name from values if chart specific db is disabled, external db is enabled, secret name & key are not set
    set:
      global: {}
      merlin-postgresql:
        enabled: false
      merlinExternalPostgresql:
        enabled: true
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: my-release-merlin-external-postgresql
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: postgresql-password

  - it: should set database secret key and name from values if chart specific db is disabled, external db is disabled
    set:
      global:
        postgresqlUsername: merlin-global
        merlin:
          postgresqlDatabase: merlin-global
      merlin-postgresql:
        enabled: false
      merlinExternalPostgresql:
        enabled: false
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal: # check database secret name
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: my-release-postgresql
      - equal: # check database secret key
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: postgresql-password

  - it: should set releasedVersion as deployment image tag if deployment image tag is unset
    set:
      deployment:
        image:
          tag: ""
      rendered:
        releasedVersion: v1.0.0-test-released-version
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: my-release-merlin$
      - equal: # check database secret name
          path: spec.template.spec.containers[0].image
          value: ghcr.io/caraml-dev/merlin:1.0.0-test-released-version
