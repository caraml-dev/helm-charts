global:
  protocol: "http"
deployment:
  # -- mlp image related configs
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: gojek/mlp
    tag: v1.7.4-build.5-ac5d3eb

  replicaCount: 1

  # -- Additional labels to apply on the pod level
  podLabels: {}

  # -- Configure resource requests and limits, Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

  livenessProbe:
    path: "/v1/internal/live"
  readinessProbe:
    path: "/v1/internal/ready"

  apiHost: "http://mlp/v1"
  mlflowTrackingUrl: "http://mlflow.mlp"
  environment: "production"

  # -- Enabled CaraML applications
  applications:
    - name: Merlin
      description: Platform for deploying machine learning models
      homepage: /merlin
      configuration:
        api: /api/merlin
        iconName: machineLearningApp
        navigation:
          - label: Models
            destination: /models
          - label: Transformer Simulator
            destination: /transformer-simulator
    - name: Turing
      description: Platform for setting up ML experiments
      homepage: /turing
      configuration:
        api: /api/turing
        iconName: graphApp
        navigation:
          - label: Routers
            destination: /routers
          - label: Ensemblers
            destination: /ensemblers
          - label: Ensembling Jobs
            destination: /jobs
          - label: Experiments
            destination: /experiments
    - name: Feast
      description: Platform for managing and serving ML features
      homepage: /feast
      configuration:
        api: /feast/api
        iconName: appSearchApp
        navigation:
          - label: Entities
            destination: /entities
          - label: Feature Tables
            destination: /featuretables
          - label: Batch Ingestion Jobs
            destination: /jobs/batch
          - label: Stream Ingestion Jobs
            destination: /jobs/stream
    - name: Pipelines
      description: Platform for managing ML pipelines
      homepage: /pipeline
      configuration:
        iconName: pipelineApp


  authorization:
    enabled: false
    serverUrl: http://mlp-authorization-keto

  # -- Streams list
  streams:
    marketing:
      - promotions
      - growth
    business:
      - operations

  # -- Documentation list for caraml components
  docs:
    - label: "Merlin User Guide"
      href: "https://github.com/gojek/merlin/blob/main/docs/getting-started/README.md"
    - label: "Turing User Guide"
      href: "https://github.com/gojek/turing"
    - label: "Feast User Guide"
      href: "https://docs.feast.dev/user-guide/overview"

  ui:
    clockworkHomepage: "http://clockwork.dev"
    kubeflowHomepage: "http://kubeflow.org"

  # -- OAuth client id for login
  oauthClientID: ""

ingress:
  enabled: false
  # class: "nginx"
  # host: "localhost"
  # path: "/"
  # Ref for pathTypes https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
  # pathType: "Prefix"

encryption:
  # encryption.key must be specified using --set flag.
  key: "example-key-here"

service:
  externalPort: 8080
  internalPort: 8080

externalPostgresql:
  # -- If you would like to use an external postgres database, enable it here using this
  enabled: false
  # -- External postgres database user
  username: mlp
  # -- External postgres database schema
  database: mlp
  # -- Set the External postgres db password using this value at runtime (using --set flag) to create a secret
  password: password
  # -- Host address for the External postgres
  address: 127.0.0.1
  createSecret: false
  # -- If a secret is created by external systems (eg. Vault)., mention the secret name here
  secretName: ""
# -- If a secret is created by external systems (eg. Vault)., mention the key under which password is stored in secret (eg. postgresql-password)
  secretKey: "postgresql-password"

postgresql:
  # -- Enable creating mlp specific postgres instance
  enabled: true

  # -- Configure resource requests and limits, Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

  persistence:
    size: 10Gi

  # -- override the name here so that db gets created like <release_name>-mlp-postgresql
  nameOverride: mlp-postgresql

  postgresqlUsername: mlp
  postgresqlDatabase: mlp
  # metrics:
  #   enabled: true
  #   serviceMonitor:
  #     enabled: true
  # replication:
  #   enabled: true
  #   user: repl_user
  #   password: repl_password
  #   slaveReplicas: 2
  #   ## Set synchronous commit mode: on, off, remote_apply, remote_write and local
  #   ## ref: https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-WAL-LEVEL
  #   synchronousCommit: "on"
  #   ## From the number of `slaveReplicas` defined above, set the number of those that will have synchronous replication
  #   ## NOTE: It cannot be > slaveReplicas
  #   numSynchronousReplicas: 2
  #   ## Replication Cluster application name. Useful for defining multiple replication policies
  #   applicationName: mlp
