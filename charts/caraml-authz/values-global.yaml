global:
  ingressIP: ""
  oauthclient: "test-client-123"
  # -- istioIngressIP takes precedence over domain. Used for local deployment
  istioLookUp:
    namespace: istio-system
    name: istio-ingressgateway

  # Domain used to configure gateway and virtual service
  domain: ""
  hosts:
    mlp: ["console"]
    mlpdocs: ["docs"]
    mlflow: ["mlflow"]

  mlp:
    apiPrefix: "/v1"  # path prefix to where mlp endpoints lie if running on localhost
    serviceName: mlp
    externalPort: "8080"
    vsPrefix: "/api"
    useServiceFqdn: false  # url generated will use k8s service fqdn/path instead of vs hosts/path
    uiPrefix: "/"
    uiServiceName: mlp

  merlin:
    apiPrefix: "/v1"
    serviceName: merlin
    externalPort: "8080"
    vsPrefix: "/api/merlin"
    useServiceFqdn: true  # url generated will use k8s service fqdn/path instead of vs hosts/path
    uiPrefix: "/merlin"
    uiServiceName: merlin

  turing:
    apiPrefix: "/v1"
    serviceName: turing
    externalPort: "8080"
    vsPrefix: "/api/turing"
    useServiceFqdn: true  # url generated will use k8s service fqdn/path instead of vs hosts/path
    uiPrefix: "/turing"
    uiServiceName: turing

  xp:
    apiPrefix: "/"
    serviceName: xp-management
    externalPort: "8080"
    vsPrefix: "/api/xp"
    useServiceFqdn: true  # url generated will use k8s service fqdn/path instead of vs hosts/path
    uiPrefix: "/xp"
    uiServiceName: xp-management

  pipeline:
    uiPrefix: "/pipeline"
    serviceName: pipeline-ui

  feast:
    apiPrefix: "/api"
    serviceName: feast-ui
    externalPort: "8080"
    vsPrefix: "/feast"
    uiPrefix: "/feast"
    useServiceFqdn: true  # url generated will use k8s service fqdn/path instead of vs hosts/path
    uiServiceName: feast-ui

  mlflow:
    serviceName: merlin-mlflow
    port: 80
    externalPort: "8080"

  authz:
    serviceName: caraml-authz
    externalPort: "80"
