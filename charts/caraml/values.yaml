# Default values for caraml.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  postgresqlUsername: caraml
  postgresqlDatabase: caraml
  authz:
    postgresqlDatabase: authz
    serviceName: caraml-authz
  mlp:
    postgresqlDatabase: mlp
  merlin:
    postgresqlDatabase: merlin
    mlflow:
      postgresqlDatabase: mlflow
mlp:
  # -- To enable/disable MLP chart installation.
  enabled: true
  postgresql:
    # -- To enable/disable MLP specific postgres
    enabled: false
  deployment:
    authorization:
      enabled: true
merlin:
  # -- To enable/disable merlin chart installation.
  enabled: true
  deployment:
    resources:
      requests:
        cpu: "250m"
        memory: 256Mi
      limits:
        cpu: "500m"
        memory: 512Mi
  merlin-postgresql:
    # -- To enable/disable merlin specific postgres
    enabled: false
  mlflow:
    resources:
      requests:
        cpu: "250m"
        memory: 256Mi
      limits:
        cpu: "500m"
        memory: 512Mi
  mlflow-postgresql:
    # -- To enable/disable mlflow specific postgres
    enabled: false
  mlp:
    enabled: false
  kserve:
    enabled: true
    chartValues:
      knativeServingIstio:
        chartValues:
          controller:
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: 1000m
                memory: 512Mi
          webhook:
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 300m
                memory: 512Mi
          knativeServingCore:
            autoscaler:
              resources:
                requests:
                  cpu: 250m
                  memory: 256Mi
                limits:
                  cpu: 1000m
                  memory: 1000Mi
            autoscalerHpa:
              resources:
                requests:
                  cpu: 250m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
            controller:
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 1000m
                  memory: 512Mi
          istiod:
            enabled: false
          base:
            enabled: false
          istioIngressGateway:
            global:
              enabled: false
            helmChart:
              namespace: "istio-system"  #  NOTE: Need to set this for the helm tests in kserve to run successfully.
          clusterLocalGateway:
            global:
              enabled: false
      # NOTE: If kserve is enabled, install cert-manager through kserve because
      # kserve requires cert-manager to be installed first
      # certManagerBase:
      #   enabled: false
      cert-manager:
        enabled: true
caraml-authz:
  enabled: true
  caraml-authz-postgresql:
    enabled: false
  # -- Following are the keto policies that are used in CaraML components.
  policies:
    - id: "policies:admin"
      description: Administrator policy to gain access to all resources
      subjects: ["roles:admin"]
      resources: ["resources:**"]
      actions: ["actions:**"]
      effect: allow
    - id: "policies:allow-read-all-projects"
      description: Allow reading of all mlp projects
      subjects: ["roles:project-reader"]
      resources: ["resources:mlp:projects:**"]
      actions: ["actions:read"]
      effect: allow
    - id: "policies:allow-all-list-environments"
      description: Allow all users to list merlin environment
      subjects: ["roles:**", "users:**"]
      resources: ["resources:mlp:environments"]
      actions: ["actions:read"]
      effect: allow
    - id: "policies:allow-all-list-create-projects"
      description: Allow all users to list and create mlp project
      subjects: ["roles:**", "users:**"]
      resources: ["resources:mlp:projects"]
      actions: ["actions:read", "actions:create"]
      effect: allow
    - id: "policies:allow-all-list-applications"
      description: Allow all users to list applications
      subjects: ["roles:**", "users:**"]
      resources: ["resources:mlp:applications"]
      actions: ["actions:read"]
      effect: allow
    - id: "policies:allow-access-users-resources"
      description: Allow all users to access API related to the user
      subjects: ["roles:**", "users:**"]
      resources: ["resources:mlp:users", "resources:mlp:users:**"]
      actions: ["actions:read"]
      effect: allow
    - id: "policies:allow-all-standard-transformer-simulate"
      description: Allow all users to simulate standard transformer
      subjects: ["roles:**", "users:**"]
      resources: ["resources:mlp:standard_transformer:simulate"]
      actions: ["actions:create"]
      effect: allow
caraml-routes:
  enabled: true
  certManagerBase:
    enabled: false
  cert-manager:
    enabled: false
postgresql:
  # -- To enable/disable CaraML specific postgres
  enabled: true
  # -- Configure resource requests and limits, Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

  persistence:
    size: 10Gi
  # -- To set the user name for the database instance
  postgresqlUsername: caraml
  # -- To set the database schema name created in postgres
  postgresqlDatabase: caraml
  # metrics:
  #   enabled: true
  #   serviceMonitor:
  #     enabled: true
  # replication:
  #   enabled: true
  #   user: repl_user
  #   password: repl_password
  #   slaveReplicas: 2
  #   ## Set synchronous commit mode: on, off, remote_apply, remote_write and local
  #   ## ref: https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-WAL-LEVEL
  #   synchronousCommit: "on"
  #   ## From the number of `slaveReplicas` defined above, set the number of those that will have synchronous replication
  #   ## NOTE: It cannot be > slaveReplicas
  #   numSynchronousReplicas: 2
  #   ## Replication Cluster application name. Useful for defining multiple replication policies
  #   applicationName: caraml
  initdbScripts:
    init.sql: |
      CREATE DATABASE mlp;
      CREATE DATABASE merlin;
      CREATE DATABASE mlflow;
      CREATE DATABASE authz;
############################################################
# Istio Base
############################################################
base:
  # -- Set to false if there is an existing istio deployment
  enabled: true
  validationURL: ""
  global:
    istioNamespace: "istio-system"
############################################################
# Istiod - installed using helm-dep-installer chart
############################################################
istiod:
  # -- Set to false if there is an existing istio deployment
  enabled: true
  helmChart:
    repository: "https://istio-release.storage.googleapis.com/charts"
    chart: istiod
    version: 1.13.9
    release: istiod
    namespace: "istio-system"
  hook:
    weight: -3
  chartValues:
    deployInReleaseNs: false
    configValidation: true
    global:
      istioNamespace: "istio-system"
      configValidation: true
    pilot:
      autoscaleEnabled: false
      # -- Set accordingly based on environment
      # autoscaleMin: 1
      # autoscaleMax: 5
      # rollingMaxSurge: 100%
      # rollingMaxUnavailable: 25%

      resources:
        requests:
          cpu: 250m
          memory: 256Mi
        limits:
          cpu: 1
          memory: 1024Mi
      cpu:
        targetAverageUtilization: 80
    meshConfig:
      enableTracing: false
############################################################
# istioIngressGateway - installed using helm-dep-installer chart
############################################################
istioIngressGateway:
  global:
    # -- Controls deployment of istio-ingressgateway. Set to false if there is an existing istio deployment
    enabled: true
  helmChart:
    repository: "https://istio-release.storage.googleapis.com/charts"
    chart: gateway
    version: 1.13.9
    release: istio-ingress-gateway
    namespace: "istio-system"
    createNamespace: false
  hook:
    weight: 1
  chartValues:
    # -- Specify name here so each gateway installation has its own unique name
    name: istio-ingressgateway
    autoscaling:
      enabled: false
      # # -- Set accordingly based on environment
      # minReplicas: 1
      # maxReplicas: 4
      # targetCPUUtilizationPercentage: 80
    serviceAccount:
      # If set, a service account will be created. Otherwise, the default is used
      create: true
      # The name of the service account to use.
      # If not set, the release name is used
      name: "istio-ingressgateway"
    env:
      ISTIO_META_ROUTER_MODE: standard
      ISTIO_METAJSON_STATS: |
        {\"sidecar.istio.io/statsInclusionSuffixes\": \"upstream_rq_1xx,upstream_rq_2xx,upstream_rq_3xx,upstream_rq_4xx,upstream_rq_5xx,upstream_rq_time,upstream_cx_tx_bytes_total,upstream_cx_rx_bytes_total,upstream_cx_total,downstream_rq_1xx,downstream_rq_2xx,downstream_rq_3xx,downstream_rq_4xx,downstream_rq_5xx,downstream_rq_time,downstream_cx_tx_bytes_total,downstream_cx_rx_bytes_total,downstream_cx_total\"}
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 2048Mi
############################################################
# clusterLocalGateway - installed using helm-dep-installer chart
############################################################
clusterLocalGateway:
  global:
    # -- Controls deployment of cluster-local-gateway. Set to false if there is an existing istio deployment
    enabled: true
  helmChart:
    repository: "https://istio-release.storage.googleapis.com/charts"
    chart: gateway
    version: 1.13.9
    release: cluster-local-gateway
    namespace: "istio-system"
    createNamespace: false
  hook:
    weight: 1
  chartValues:
    global:
      # -- Controls deployment of cluster-local-gateway. Set to false if there is an existing istio deployment
      enabled: true
    # -- Specify name here so each gateway installation has its own unique name
    name: cluster-local-gateway
    labels:
      app: cluster-local-gateway
      istio: cluster-local-gateway
    serviceAccount:
      # If set, a service account will be created. Otherwise, the default is used
      create: true
      # The name of the service account to use.
      # If not set, the release name is used
      name: "cluster-local-gateway"
    autoscaling:
      enabled: false
      # # -- Set accordingly based on environment
      # minReplicas: 1
      # maxReplicas: 4
      # targetCPUUtilizationPercentage: 60
    env:
      ISTIO_METAJSON_STATS: |
        {\"sidecar.istio.io/statsInclusionSuffixes\": \"upstream_rq_1xx,upstream_rq_2xx,upstream_rq_3xx,upstream_rq_4xx,upstream_rq_5xx,upstream_rq_time,upstream_cx_tx_bytes_total,upstream_cx_rx_bytes_total,upstream_cx_total,downstream_rq_1xx,downstream_rq_2xx,downstream_rq_3xx,downstream_rq_4xx,downstream_rq_5xx,downstream_rq_time,downstream_cx_tx_bytes_total,downstream_cx_rx_bytes_total,downstream_cx_total\"}
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1024Mi
    service:
      type: ClusterIP
      ports:
        - port: 80
          targetPort: 80
          name: http2
        - port: 443
          name: https
###################################################################
# Cert manager Base for Cert Manager CRDs
# #################################################################
certManagerBase:
  enabled: true
###################################################################
# Cert manager dependency
# #################################################################
# Use hyphen so chart name can be used as part of resource name
cert-manager:
  # NOTE: disable certmanager if kserve needs to be installed
  fullnameOverride: cert-manager
  enabled: false
