apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "turing.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "turing.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "turing.fullname" . }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "turing.fullname" . }}
        release: {{ .Release.Name }}
{{- if .Values.deployment.labels }}
{{ toYaml .Values.deployment.labels | indent 8 -}}
{{- end }}
    spec:
      {{- if or .Values.serviceAccount.create .Values.clusterConfig.useInClusterConfig }}
      serviceAccountName: {{ template "turing.serviceAccountName" . }}
      {{- end }}
      {{- with (include "turing.initContainers" . | fromYaml) }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: api
        image: {{ template "turing.image" . }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.deployment.livenessProbe.path }}
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: {{ default "60" .Values.deployment.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default "10" .Values.deployment.livenessProbe.periodSeconds }}
          successThreshold: {{ default "1" .Values.deployment.livenessProbe.successThreshold }}
          timeoutSeconds: {{ default "5" .Values.deployment.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.deployment.readinessProbe.path }}
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: {{ default "60" .Values.deployment.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default "10" .Values.deployment.readinessProbe.periodSeconds }}
          successThreshold: {{ default "1" .Values.deployment.readinessProbe.successThreshold }}
          timeoutSeconds: {{ default "5" .Values.deployment.readinessProbe.timeoutSeconds }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 12 }}
        args:
        - -config
        - /etc/turing/config.yaml
        {{- if .Values.uiConfig }}
        - -ui-config
        - /etc/turing/ui.config.json
        {{- end }}
        {{- with .Values.deployment.extraArgs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "common.postgres-password-secret-name" (list (index .Values "turing-postgresql") .Values.turingExternalPostgresql .Release .Chart ) }}
              key: {{ include "common.postgres-password-secret-key" (list .Values.turingExternalPostgresql) }}
        {{- if (or .Values.mlp.enabled .Values.merlin.mlp.enabled) }}
        - name: MLPCONFIG_MLPENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: {{ printf "%s-mlp-encryption-key" .Release.Name }} # TODO: Update mlp.encryption-key-name function
              key: encryption-key
        {{- end }}
        {{- with .Values.deployment.extraEnvs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/turing
        - name: plugins-volume
          mountPath: {{ include "turing.plugins.directory" . }}
        - name: environments
          mountPath: {{ include "turing.environments.directory" . }}
        {{- if .Values.openApiSpecOverrides }}
        - name: openapi
          mountPath: /etc/openapi
        {{- end }}
        {{- with .Values.deployment.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.deployment.extraContainers }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - name: config 
        secret:
          secretName: {{ template "turing.fullname" . }}-config
      - name: environments
        secret:
          secretName: {{ ternary (printf "%s-environments" (include "turing.fullname" .) ) ( .Values.mlp.environmentConfigSecret.name ) (eq .Values.mlp.environmentConfigSecret.name "") }}
      - name: plugins-volume
        emptyDir: {}
      {{- if .Values.openApiSpecOverrides }}
      - name: openapi 
        configMap:
          name: {{ template "turing.fullname" . }}-openapi
      {{- end }}
      {{- with .Values.deployment.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}

{{- if (not .Values.nodeSelectorDisabled) }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{ end -}}
{{ end -}}
