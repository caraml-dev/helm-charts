global:
  # -- Extra pod labels in a map[string]string format, most likely to be used for the costing labels.
  extraPodLabels: {}
  # -- Define which Nodes the Pods are scheduled on.
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- If specified, the pod's tolerations.
  # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- Assign custom affinity rules to the prometheus operator
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

# -- Please check out the Knative documentation in https://github.com/knative/serving/releases/download/knative-v1.0.1/serving-core.yaml
config:
  autoscaler: {}
  defaults: {}
  deployment:
    queueSidecarImage: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:2249dc873059c0dfc0783bce5f614a0d8ada3d4499d63aa1dffd19f2788ba64b
  domain: {}
  features: {}
  gc: {}
  leaderElection:
    lease-duration: "60s"
    renew-deadline: "40s"
    retry-period: "10s"
  buckets: "1"
  logging:
    logging.request-log-template: ""
  network: {}
  observability: {}
  tracing: {}

activator:
  autoscaling:
    # -- Enables autoscaling for activator deployment.
    enabled: true
    # -- Minimum number of replicas for activator.
    minReplicas: 1
    # -- Maximum number of replicas for activator.
    maxReplicas: 20
    # -- Target CPU utlisation before it scales up/down.
    targetCPUUtilizationPercentage: 50
  image:
    # -- Repository of the activator image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/activator"
    # -- Tag of the activator image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the activator image, either provide tag or SHA (SHA will be given priority)
    sha: "01270196a1eba7e5fd5fe34b877c82a7e8c93861de535a82342717d28f81d671"
  # -- Number of replicas for the activator deployment.
  replicaCount: 1
  # -- Resources requests and limits for activator. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 300m
      memory: 100Mi
    limits:
      cpu: 1000m
      memory: 600Mi

autoscaler:
  image:
    # -- Repository of the autoscaler image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler"
    # -- Tag of the autoscaler image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the autoscaler image, either provide tag or SHA (SHA will be given priority)
    sha: "c5a03a236bfe2abdc7d40203d787668c8accaaf39062a86e68b4d403077835e2"
  # -- Number of replicas for the autoscaler deployment.
  replicaCount: 1
  # -- Resources requests and limits for autoscaler. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

controller:
  autoscaling:
    # -- Enables autoscaling for controller deployment.
    enabled: true
    # -- Minimum number of replicas for controller.
    minReplicas: 1
    # -- Maximum number of replicas for controller.
    maxReplicas: 20
    # -- Target CPU utlisation before it scales up/down.
    targetCPUUtilizationPercentage: 50
  image:
    # -- Repository of the controller image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/controller"
    # -- Tag of the controller image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the controller image, either provide tag or SHA (SHA will be given priority)
    sha: "cc33e6392485e9d015886d4443324b9a41c17f6ce98b31ef4b19e47325a9a7e8"
  # -- Number of replicas for the controller deployment.
  replicaCount: 1
  # -- Resources requests and limits for controller. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

domainMapping:
  image:
    # -- Repository of the domain mapping image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/domain-mapping"
    # -- Tag of the domain mapping image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the domain mapping image, either provide tag or SHA (SHA will be given priority)
    sha: "00a26f25ef119952b0ecf890f9f9dcb877b5f5d496f43c44756b93343d71b66e"
  # -- Number of replicas for the domain mapping deployment.
  replicaCount: 1
  # -- Resources requests and limits for domain mapping. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 30m
      memory: 40Mi
    limits:
      cpu: 300m
      memory: 400Mi

domainMappingWebhook:
  image:
    # -- Repository of the domain mapping webhook image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/domain-mapping-webhook"
    # -- Tag of the domain mapping webhook image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the domain mapping webhook image, either provide tag or SHA (SHA will be given priority)
    sha: "f8f09d3a509b0c25d50be7532d4337a30df4ec5f51b9ed23ad9f21b3940c16ca"
  # -- Number of replicas for the domain mapping webhook deployment.
  replicaCount: 1
  # -- Resources requests and limits for domain mapping webhook. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi

webhook:
  autoscaling:
    # -- Enables autoscaling for webhook deployment.
    enabled: true
    # -- Minimum number of replicas for webhook.
    minReplicas: 1
    # -- Maximum number of replicas for webhook.
    maxReplicas: 20
    # -- Target CPU utlisation before it scales up/down.
    targetCPUUtilizationPercentage: 50
  image:
    # -- Repository of the webhook image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/webhook"
    # -- Tag of the webhook image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the webhook image, either provide tag or SHA (SHA will be given priority)
    sha: "b001a58cb7eac7fbae4d83d8a111fa0f6726d36e86844d5b1dc3c9b8fdd5710a"
  # -- Number of replicas for the webhook deployment.
  replicaCount: 1
  # -- Resources requests and limits for webhook. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 500Mi

queueProxy:
  image:
    # -- Repository of the queue proxy image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/queue"
    # -- Tag of the queue proxy image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the queue proxy image, either provide tag or SHA (SHA will be given priority)
    sha: "2249dc873059c0dfc0783bce5f614a0d8ada3d4499d63aa1dffd19f2788ba64b"

monitoring:
  enabled: false
  podMonitor:
    userMetricPortName: metrics
    userPortName: user-port
    selector:
      matchExpressions:
        - key: "{{ .Values.monitoring.selectorKey }}"
          operator: Exists
    metricRelabelings: {}
  selectorKey: serving.knative.dev/release
  allNamespaces: true

autoscalerHpa:
  enabled: true
  image:
    # -- Repository of the autoscaler image
    repository: "gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler-hpa"
    # -- Tag of the autoscaler image, either provide tag or SHA (SHA will be given priority)
    tag: ""
    # -- SHA256 of the autoscaler image, either provide tag or SHA (SHA will be given priority)
    sha: "256373054915e035d3f5df214ca80eea7a235526c93348933f42acf0437bb1a2"
  # -- Number of replicas for the autoscaler deployment.
  replicaCount: 1
  # -- Resources requests and limits for autoscaler. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 500m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 256Mi
